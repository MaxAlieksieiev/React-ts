[{"/home/max/Courses/frontend/my-app/src/index.tsx":"1","/home/max/Courses/frontend/my-app/src/reportWebVitals.ts":"2","/home/max/Courses/frontend/my-app/src/App.tsx":"3","/home/max/Courses/frontend/my-app/src/components/NavBar.tsx":"4","/home/max/Courses/frontend/my-app/src/components/TodoForm.tsx":"5","/home/max/Courses/frontend/my-app/src/components/TodoList.tsx":"6","/home/max/Courses/frontend/my-app/src/pages/TodosPage.tsx":"7","/home/max/Courses/frontend/my-app/src/pages/AboutPage.tsx":"8"},{"size":500,"mtime":1611143477691,"results":"9","hashOfConfig":"10"},{"size":425,"mtime":1611143477691,"results":"11","hashOfConfig":"10"},{"size":569,"mtime":1611154837347,"results":"12","hashOfConfig":"10"},{"size":540,"mtime":1611154622807,"results":"13","hashOfConfig":"10"},{"size":956,"mtime":1611148572915,"results":"14","hashOfConfig":"10"},{"size":1234,"mtime":1611159176417,"results":"15","hashOfConfig":"10"},{"size":1482,"mtime":1611162384415,"results":"16","hashOfConfig":"10"},{"size":654,"mtime":1611154708194,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1wdqt8h",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"/home/max/Courses/frontend/my-app/src/index.tsx",[],["36","37"],"/home/max/Courses/frontend/my-app/src/reportWebVitals.ts",[],"/home/max/Courses/frontend/my-app/src/App.tsx",[],"/home/max/Courses/frontend/my-app/src/components/NavBar.tsx",[],"/home/max/Courses/frontend/my-app/src/components/TodoForm.tsx",["38"],"import React, { FC, useState, useRef } from \"react\";\n\ninterface TodoFormProps {\n  onAdd(title: string): void;\n}\nexport const TodoForm: FC<TodoFormProps> = (props) => {\n  const ref = useRef<HTMLInputElement>(null);\n  // const [title, setTitle] = useState<string>(\"\");\n\n  // const changeHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n  //   setTitle(event.target.value);\n  // };\n\n  const keyPressHandler = (event: React.KeyboardEvent) => {\n    if (event.key === \"Enter\") {\n      props.onAdd(ref.current!.value);\n      ref.current!.value = \"\";\n      // console.log(title);\n    }\n  };\n\n  return (\n    <div className=\"input-field mt2\">\n      <input\n        // onChange={changeHandler}\n        // value={title}\n        ref={ref}\n        type=\"text\"\n        id=\"title\"\n        placeholder=\"Write task\"\n        onKeyPress={keyPressHandler}\n      />\n      <label htmlFor=\"title\" className=\"active\">\n        Write task\n      </label>\n    </div>\n  );\n};\n","/home/max/Courses/frontend/my-app/src/components/TodoList.tsx",[],"/home/max/Courses/frontend/my-app/src/pages/TodosPage.tsx",[],"/home/max/Courses/frontend/my-app/src/pages/AboutPage.tsx",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":1,"column":21,"nodeType":"45","messageId":"46","endLine":1,"endColumn":29},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]